---
- name: Drop database Clickhouse
  hosts: clickhouse
  tags: [drop_clickhouse_database_logs, never]
  tasks:
    - name: Drop clickhouse database logs
      ansible.builtin.command:
        argv:
          - clickhouse-client
          - -q
          - drop database {{ clickhouse_database_name }};
      register: drop_table
      failed_when: drop_table.rc != 0 and drop_table.rc !=81 # db doesn't exist
      changed_when: drop_table.rc == 0

- name: Clickhouse | Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  # pre_tasks:
  #   - name: FireWall Clickhouse | Разрешим 8123 порт
  #     become: true
  #     ansible.posix.firewalld:
  #       port: 8123-9000/tcp
  #       permanent: true
  #       state: enabled
  #   - name: FireWall Clickhouse | Перезапустим service firewalld
  #     become: true
  #     ansible.builtin.service:
  #       name: firewalld
  #       state: restarted
  tasks:
    - block:
        - name: Clickhouse | Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: 0755
          with_items: "{{ clickhouse_packages }}"
        - name: Clickhouse | Get clickhouse distrib static
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: 0755
      rescue:
        - name: Clickhouse | Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: 0755
    - name: Clickhouse | Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
        disable_gpg_check: true
      notify: Start clickhouse service
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers
    - name: Delay befor create DB - Pause playbook
      ansible.builtin.pause:
        seconds: 10
    - name: Clickhouse | Create database
      ansible.builtin.command:
        argv:
          - clickhouse-client
          - -q
          - create database {{ clickhouse_database_name }};
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82 # db already exists
      changed_when: create_db.rc == 0
    - name: Clickhouse | Create log table
      tags: clickhouse_db
      ansible.builtin.command:
        argv:
          - clickhouse-client
          - --database
          - "{{ clickhouse_database_name }}"
          - -q
          - "{{ clickhouse_create_table }}" # - 'CREATE TABLE IF NOT EXISTS  logs.access_logs ( message String ) ENGINE = MergeTree() ORDER BY tuple()'
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc !=57 # table already exists
      changed_when: create_table.rc == 0
    # - name: Clickhouse | General config
    #   become: true
    #   ansible.builtin.template:
    #     src: templates/clickhouse.xml.j2
    #     dest: /etc/clickhouse-server/config.xml
    #     mode: 0644
      notify: Start clickhouse service

- name: Install Vector
  hosts: vector
  handlers:
    - name: Start vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
  pre_tasks:
    - name: Vector | Add clickhouse addresses to /etc/hosts
      become: true
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item].ansible_host }} {{item}}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.clickhouse }}"
  tasks:
    - name: Vector | Get vector distrib
      ansible.builtin.get_url:
        url: https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-1.x86_64.rpm
        dest: ./vector-{{ vector_version }}-1.x86_64.rpm
        mode: 0755
    - name: Vector | Install vector rpm
      become: true
      ansible.builtin.yum:
        name: vector-{{ vector_version }}-1.x86_64.rpm
        disable_gpg_check: true
    - name: Add vector user to systemd-journal group
      become: true
      user:
        name: vector
        groups: systemd-journal
        append: true
    - name: Vector | Update vector config
      become: true
      ansible.builtin.lineinfile:
        path: /etc/default/vector
        regexp: 'VECTOR_CONFIG='
        line: VECTOR_CONFIG=/etc/vector/config.yaml
    - name: Vector | Create vector config
      become: true
      ansible.builtin.copy:
        dest: /etc/vector/config.yaml
        content: |
          {{ vector_config | to_nice_yaml(indent=2) }}
    - name: Replace host ip
      become: true
      ansible.builtin.replace:
        path: /etc/vector/config.yaml
        regexp: 'endpoint: http://c8-clickhouse:8123'
        replace: "endpoint: http://{{ hostvars[item].ansible_host }}:8123"
        backup: true
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.clickhouse }}"
      notify: Start vector service

- name: Install Nginx
  hosts: lighthouse:vector
  become: true
  handlers:
    - name: Start nginx
      ansible.builtin.command: nginx
    - name: Reload nginx
      ansible.builtin.command: nginx -s reload
  tasks:
    - name: Nginx | Install eper-release
      ansible.builtin.yum:
        name: epel-release
        state: present
    - name: Nginx | Install Nginx
      ansible.builtin.yum:
        name: nginx
        state: present
      notify: Start nginx
    - name: Nginx | Create general config
      ansible.builtin.template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: 0644
      notify: Reload nginx
    # - name: Nginx | Разрешим 80 порт
    #   ansible.posix.firewalld:
    #     service: http
    #     permanent: true
    #     state: enabled
    # - name: Nginx | Перезапустим service firewalld на всех узлах
    #   ansible.builtin.service:
    #     name: firewalld
    #     state: restarted

- name: Install LightHouse
  hosts: lighthouse
  become: true
  handlers:
    - name: Reload Nginx
      ansible.builtin.command: nginx -s reload
  pre_tasks:
    - name: LightHouse | Install git
      ansible.builtin.yum:
        name: git
        state: present
    - name: Add clickhouse addresses to /etc/hosts
      become: true
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item].ansible_host }} {{item}}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.clickhouse }}"
  tasks:
    - name: LightHouse | Get from git repo
      become: true
      ansible.builtin.git:
        repo: "{{ lighthouse_git }}"
        version: master
        dest: "{{ lighthouse_home_dir }}"
    - name: LightHouse | LightHouse nginx config
      become: true
      ansible.builtin.template:
        src: lighthouse.conf.j2
        dest: /etc/nginx/conf.d/default.conf
        mode: 0644
      notify: Reload Nginx
